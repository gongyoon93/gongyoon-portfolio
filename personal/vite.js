// vite는 빠른 esbuild를 사용하고 webpack은 내장된 빌더를 사용하는데 속도가 느리다. webpack은 설정이 복잡하고 webpack5부터 캐싱기능과
// 최적화 기능들이 나왔지만 규모가 커질수록 전체 모듈을 빌드하기 때문에 빌드 속도가 느려질 수 있다.
// vite는 개발환경의 런타임에 필요한 모듈을 빌드하고 브라우저에 즉시 반영한다.(HMR:Hot Module Replacement 새로고침 없이 즉시 반영)
// 또한 다른 번들러처럼 배포 전에도 최적화 및 압축화 단계가 추가된 배포용 번들이 생성된다.
// 개발환경 런타임 빌드와 배포단계의 빌드

// 일반적인 배포 전 빌드 과정
// 1. 트랜스파일링(Transpiling): 최신 버전의 자바스크립트 코드를 이전 버전으로 변환하는 과정이다. ex) Babel
// 2. 번들링(Bundling): 여러 개의 파일로 나누어져 있는 소스 코드를 하나로 묶는 과정이다. ex) Webpack, Parcel, Rollup
// 3. 코드 최적화(Optimization): 불필요한 코드를 제거하고 성능을 최적화하는 작업. ex) Terser
// 4. 리소스 관리(Resource Management): CSS, 이미지 등의 리소스 파일을 처리하고 적절한 경로로 매핑하는 작업이 포함된다.
